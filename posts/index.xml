<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 小雪豹山洞</title>
    <link>https://xingjian-bai.github.io/posts/</link>
    <description>Recent content in Posts on 小雪豹山洞</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 03 Feb 2023 10:52:21 +0000</lastBuildDate><atom:link href="https://xingjian-bai.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tmux_skills</title>
      <link>https://xingjian-bai.github.io/posts/tmux_skills/</link>
      <pubDate>Fri, 03 Feb 2023 10:52:21 +0000</pubDate>
      
      <guid>https://xingjian-bai.github.io/posts/tmux_skills/</guid>
      <description>Session tmux new -s &amp;lt;session-name&amp;gt; tmux detach tmux ls tmux attach -t &amp;lt;session-name&amp;gt; tmux kill-session -t &amp;lt;session-name&amp;gt; tmux switch -t &amp;lt;session-name&amp;gt; tmux rename-session -t 0 &amp;lt;new-name&amp;gt; Windows # 新建一个指定名称的窗口 $ tmux new-window -n &amp;lt;window-name&amp;gt; # 切换到指定编号的窗口 $ tmux select-window -t &amp;lt;window-number&amp;gt; # 切换到指定名称的窗口 $ tmux select-window -t &amp;lt;window-name&amp;gt; $ tmux rename-window &amp;lt;new-name&amp;gt; Panes # 划分上下两个窗格 $ tmux split-window # 划分左右两个窗格 $ tmux split-window -h # 当前窗格上移 $ tmux swap-pane -U # 当前窗格下移 $ tmux swap-pane -D </description>
    </item>
    
    <item>
      <title>Github simplest guidelines</title>
      <link>https://xingjian-bai.github.io/posts/github_guideline/</link>
      <pubDate>Tue, 31 Jan 2023 08:30:25 +0000</pubDate>
      
      <guid>https://xingjian-bai.github.io/posts/github_guideline/</guid>
      <description>[TOC]
General Guidelines Git的报错信息很informative copy然后问chatGPT一般都可以得到解决方案 Git背后的逻辑很intuitive 一些高级的情况如rebase，merge，都是在处理真实存在的代码冲突 Git的branching system是最强大的地方 “平行宇宙” TBA Push：上传文件 在本地git中记录修改的文件
git add [file name] 记录一个文件的修改
git rm [file name] 记录一个文件的删除
git add . 记录所有文件的修改
在本地git中记录一次commit
commit像是一次“修改报告”，包含： 很多文件的修改信息。本地和在线都可以清楚的看到。 一个commit message。说明本次commit的作用。 git commit -m &amp;quot;some message&amp;quot; 将本地git的commits全部上传到github
注意！此时本地的repo必须和github repo的最新版进行过同步 (pull)，不然不可以上传。 git push 如果上面的指令报错，可以试试git push origin main 这一句指令点明了push上去的branch </description>
    </item>
    
    <item>
      <title>Interesting_slang</title>
      <link>https://xingjian-bai.github.io/posts/interesting_slang/</link>
      <pubDate>Mon, 30 Jan 2023 17:44:15 +0000</pubDate>
      
      <guid>https://xingjian-bai.github.io/posts/interesting_slang/</guid>
      <description>the joy wore thin</description>
    </item>
    
    <item>
      <title>Blog Instructions</title>
      <link>https://xingjian-bai.github.io/posts/blog-instructions/</link>
      <pubDate>Mon, 30 Jan 2023 14:38:35 +0000</pubDate>
      
      <guid>https://xingjian-bai.github.io/posts/blog-instructions/</guid>
      <description>hugo new posts/my-first-post.md # do some edits hugo </description>
    </item>
    
    <item>
      <title>WiDS2023 初探索</title>
      <link>https://xingjian-bai.github.io/posts/wids_begin/</link>
      <pubDate>Sat, 07 Jan 2023 00:29:22 +0800</pubDate>
      
      <guid>https://xingjian-bai.github.io/posts/wids_begin/</guid>
      <description>环境配置 本地建立git库，上传github合作 conda管理python环境，env name = wids 用environment.yml记录 dabl: 数据预处理工具，和pandas对接 ipykernel: 用于支持jupyter kaggle kaggle competitions submit -f FILE_NAME -m MESSAGE widsdatathon2023 kaggle competitions leaderboard widsdatathon2023 -s 题目理解 是阉割版的时序预测问题
特征中有大量时序信息（待进一步观察） 每个数据点的时间线都比较短（似乎只给了14天的数据） 特征工程很重要
几个教程里都提到这是第一步 将时间（周期性信号）做特殊建模很重要 可以去除无效信号（和目标信号做相关性分析？某个教程中有提到） 几个教程都提到，训练数据与测试数据的分布不一致
具体意思是？教程里的测试数据难道不是自己split出来的？ 如何处理分布不一致的问题？ 增加模型鲁棒性？ 数据来源透明；可以用新的数据做数据增强。</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://xingjian-bai.github.io/posts/my-first-post/</link>
      <pubDate>Fri, 06 Jan 2023 17:32:21 +0800</pubDate>
      
      <guid>https://xingjian-bai.github.io/posts/my-first-post/</guid>
      <description>Hello, world!</description>
    </item>
    
  </channel>
</rss>
